version: '3.8'

services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: forex_sentiment
      POSTGRES_USER: forex_user
      POSTGRES_PASSWORD: forex_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forex_user -d forex_sentiment"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Forex Sentiment Analyzer application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://forex_user:forex_password@postgres:5432/forex_sentiment
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - DISCORD_HEALTH_WEBHOOK_URL=${DISCORD_HEALTH_WEBHOOK_URL}
      - FOREX_FACTORY_API_URL=https://nfs.faireconomy.media/ff_calendar_thisweek.json
      - PYTHONPATH=/app
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount source code for development (optional)
      - ./src:/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js) - for local development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - app

volumes:
  postgres_data: 